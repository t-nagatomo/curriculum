＊ITとは？＊

・IT →Information Technologyの略称。パソコン、インターネット、セキュリティ、情報処理など
     広い意味で使われている。



＊OS＊

・OS →Operation Systemの略称。アプリやデバイスを操作させるための基本となるソフトウェア
     のこと。

・Windows →マイクロソフト社が開発したOS。 


・macOS (Mac OS X) →アップルが開発・販売する、MacのOS。

・UNIX →マルチタスク、マルチユーザを実現したオペレーティングシステム。安定したOS。

・Linux →世界で最も普及している、オープンソースのオペレーティングシステム。UNIX系OSの一種。



＊言語・環境＊

・HTML →ハイパーテキスト・マークアップ・ランゲージの略称。
         ホームページを作る際の骨組みとなる部分。見出し・段落・表・リストを作成する。

・CSS →カスケーディング・スタイル・シートの略称。HTMLで骨組みを作り、
        CSSで飾り付けをするイメージ。色・サイズ・レイアウトなど見栄えをよくする。

・MySQL →よく使われているデータベース管理システムの一つ。検索のスピードが高速で
          機能もすぐれている。

・PHP →サーバーサイドの言語で、Web 開発に適しており、HTMLに埋め込むことができる
	プログラミング言語。Wordpressのカスタマイズや、Mysqlとのデータベースと連携可能。

・JavaScript →Javaとは全くの別物。動的なwebサイトを作ることが出来るプログラミング言語。
	　　　 ユーザーのアクションに応じたコンテンツの表示の他、ブラウザー上で表示
               される地図やグラフィックアニメーションなども表示する事が可能。

・jQuery →JavaScriptだけのコードをより容易に記述できるようにするために設計された
           JavaScriptライブラリ。

・Apache →Apache Software Foundationが開発しているHTTPサーバーソフトウェアの名称。
　　　　   世界的に多く利用されているwebサーバーのソフト。

・Bootstrap →HTML、CSS、JavaScriptから構成される最も有名なWEBフレームワーク。
              webページで必要な部品がテンプレートとして用意されている。



＊エンジニアなど＊

・SE →システムエンジニアの略称。主にクライアントからのヒアリングやシステムの設計を行う人

・PG →プログラマの略称。実際にプログラミングを行い、コンピュータシステムのプログラム
       を作る人。

・Webデザイナー →企業や個人などのクライアントから依頼されたWebサイトのデザインを担当する人。



＊ユーザーインターフェース＊

・CUI →キャラクタユーザインターフェイスの略称。コマンドプロンプトなど。
	全ての操作がキーボード。

・GUI →グラフィカルユーザインターフェイスの略称。マウスや指で操作できる画面。



＊ファイルとディレクトリ＊

・ファイル →コンピュータで扱うデータをまとめたもの。コンピュータ世界でいう書類。

・ディレクトリ →ディレクトリ＝フォルダのこと。コンピュータ世界でいう箱。

・ルート・ディレクトリ →階層型ファイル構造における最上階層のディレクトリ。一番上のディレクトリ。

・カレント・ディレクトリ →今現在、いるディレクトリのこと。

・パス →ファイルやフォルダの置いてある場所のこと。

・絶対パス →絶対パスとはフルパスとも呼ばれており、ルートディレクトリと呼ばれる階層構造の頂点
             から目的地までの経路を表している。

・相対パス →起点となる位置から目的の位置までの道筋にある要素を順に並べて記述する経路。



＊各種プロトコル＊

・HTTP →ハイパーテキスト・トランスファー・プロトコルの略称。データをサーバとクライアント
         の間で通信するときの通信規約。

・FTP →ファイル転送プロトコル。FTPを使用することで、
　　　　ファイルをサーバーとPCの間などでやりとりすることができるようになる

・HTTPS →通信内容が暗号化されている。第三者に情報を見られたり改ざんされたり
          する心配がない。

・SSL →送受信しているデータを暗号化する通信手順。
　　　　受信者と送信者は同じ鍵を共有しており、送信者は共通鍵で暗号化し受信者は
　　　　共通鍵で復号する。

・SSH →ネットワークに接続された機器を遠隔操作し、管理するための手段。

・ポート、ポート番号 →ポート…ネットワークとパソコンの間にあるドア、もしくは接続口のこと。
　　　　　　　　　　　 ポート番号…ポート番号は、コンピュータで、実際に通信される出入口の番号。

・HTTP、FTP、SSHの各ポート番号 →HTTP…80番、
　　　　　　　　　　　　　　　　 FTP…21番ポートと20番ポートがあり、21番ポートが制御コネクション
　　　　　　　　　　　　　　　　　　　20番ポートがデータコネクション。
　　　　　　　　　　　　　　　　　　　★制御コネクション（FTPサーバーとのやり取りをする際の開始と終了を制御すること）
　　　　　　　　　　　　　　　　　　　★データコネクション（データのやり取り）
　　　　　　　　　　　　　　　　 SSH…デフォルトで22番、しかし使っていない49152 ～ 65535番のポート番号使うのが推奨されている。


・ファイアウォール →企業などの内部ネットワークをインターネットを通して侵入してくる不正なアクセスから守るための防火壁。

・TCP →トランスミッションコントロールプロトコルの略称。TCPは「コネクション型」と分類され、送受信を行う機器間で通信の開始と終了を確認をする。
　　　　ータ転送時には、送信側はデータを送信し、受信側はそれに対する確認応答であるACK（Acknowledgement）を返すことによって、両端のホスト間で
　　　　データが届いたかどうかを確認し合いながら確実にデータ転送を行います。



＊IPアドレス＊

・IPアドレス →インターネット上の機器に割り当てられるIPアドレスのこと。

・グローバルIPアドレス →インターネットに接続されているコンピュータや通信機器を個々に特定するための一意で割り当てられたIPアドレスのこと。

・プライベートIPアドレス →プライベートネットワーク上の機器に割り当てられるIPアドレスのこと。



＊ドメイン＊

・ドメイン →インターネット上に存在するコンピューターやネットワークを識別するための名前。xxx.（nagatomo.com）←（）内の部分がドメイン名。

・DNS →ドメインネームシステムの略称。インターネット上のホスト名や電子メールのアドレスに使われる
　　　　ドメイン名と、IPアドレスとの対応づけを管理するために使用されているシステム

・VPN →バーチャルプライベートネットワークの略称。インターネット上に仮想的なプライベートネットワーク（専用線）を設けて、
　　　　セキュリティ上の安全な経路を使ってデータをやり取りする技術

・ブリッジ →ネットワーク中のデータの中にあるMACアドレスを見て、行き先を振り分けてくれる機器

・プロキシサーバー →コンピューターに代わってインターネットに接続しサイトへアクセスするサーバーのこと。
                     企業の社内LANは、接続されたコンピューターを悪意ある外部アクセスから守るためにファイアウォール設定をしている。
　　　　　　　　　　 しかし、この状態では社内からWebサイトにアクセスできないため、社内LANと外部インターネットの間にプロキシサーバーを置いている。



＊電子メール＊

・SMTP →シンプル・メール・トランスファー・プロトコルの略称。メールを相手のメールサーバーまで届ける仕組みのこと。

・POP →ポスト・オフィス・プロトコルの略称。メールソフトが自動的にメールサーバーにアクセスしてメールをダウンロードしている。

・IMAP →インターネット・メッセージ・アクセス・プロトコルの略称。POPと似ているが、その違いは、メールをサーバーに残すか残さないかの違い。
　　　　POPは一度取り込むと、サーバーからは無くなってしまう。



＊セッションとクッキー＊

・セッション →コンピュータネットワークでは、接続を確立してから切断するまでの一連の通信。

・クッキー →Webサイト（Webサーバ）側が指定したデータを保存しておくことができ、利用者の識別や属性に関する情報や、
　　　　　　 最後にサイトを訪れた日時などを記録することが出来る。

・キャッシュ →ウェブページの情報を一時的に保存する仕組み。よく訪問するページの表示スピードが上がるというメリットがある。



＊DB（データベース）について＊

・チューニング →最適になるように調整すること。

・スロークエリ →データベースにおいて、時間のかかっているSQL(遅いSQL)のことをスロークエリという。

・インデックス →集・格納された大量のデータをすばやく検索・抽出するために作成された索引データをインデックスという。



＊テストについて＊

・フロー →何かの流れのこと

・単体テスト →それぞれがきちんと動くかを確認するテスト。

・結合テスト →それぞれの機能が連携してきちんと動くか」を確認するテスト。



＊チケット管理ツール＊

・チケット管理ツール →プロジェクト毎に発生する各種タスクを発行して、制作者に対して仕事を依頼するためのもの。redmineとかがそれにあたる。

・タスク →課された仕事。



＊バージョン管理＊

・Git →プログラムソースなどの変更履歴を管理する分散型のバージョン管理システム。

・SourceTree →Gitの操作ができる無料のデスクトップアプリケーション。

・SVN →Apache Subversionのこと。ファイルの変更履歴を管理してくれるシステムのひとつ。

・コンフリクト →複数のプログラムが同じデータとかファイルを同じタイミングで使おうとしてぶつかっている状態のこと。

・デグレ →プログラムにおいて、直したはずのバグが復活していたり、前はなかったはずのバグがあったり、
　　　　　 実装したはずの機能がなくなっている状態のこと

・マージツール →マージツールは，FDLファイル又はDTDファイルの変更内容をMDLファイルにマージできる




＊その他＊

・ロジック →処理の流れ

・デバッグ →バグ。コンピュータのプログラムの誤り。

・開発手法(ウォーターフォール開発、アジャイル開発) →ウォーターフォール開発…上流工程から下流工程へ順次移行していく開発手法。
　　　　　　　　　　　　　　　　　　　　　　　　　　 アジャイル開発…素早い開発。短い期間での開発。

・アルゴリズム →特定の問題を解く手順を、単純な計算や操作の組み合わせとして明確に定義したもの。

・フローチャート図 →プロセスの各ステップを箱で表し、流れをそれらの箱の間の矢印で表す図。

・設計書(外部設計、内部設計) →外部設計…操作画面や操作方法、データ出力など、ユーザーから見えるインターフェース部分の仕様を決定したり、
　　　　　　　　　　　                   セキュリティや運用規定、システム開発のスケジュールや費用などを設計。

　　　　　　　　　　　　　　　 内部設計…外部設計を基に、システム内部の動作や機能、物理データなど、ユーザーから見えにくい詳細な部分の設計。

・要件定義(要求仕様書) →エンドユーザーが開発担当側に対して開発を依頼するシステム要件を文章化したもの。

・システム開発におけるテスト(単体テスト、結合テスト、総合テスト) →単体テスト…プログラムを構成する比較的小さな単位（ユニット）が個々の機能を正しく果たしているかどうかを検証するテスト。
　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　 結合テスト…個々の機能を結合させて、うまく連携・動作しているかを確認するテスト。
　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　 総合テスト…構築したシステムが全体として予定通りの機能を満たしているかどうかを確認するテスト。

・テスト仕様書(どのようなもの、項目) →要件定義書の通りに機能するかどうか、テストするポイントをまとめたドキュメント。
　　　　　　　　　　　　　　　　　　　 テストを実施した環境
				       実施するテストの内容
                                       テストを実施するためのシステムの操作手順
                                       テストの実行結果
                                       個々のテスト項目を識別するための番号や記号（通し番号など）
                                       テストを実施した年月日
                                       テストを実行した担当者
                                       

・バリデーション →検証。入力チェック。記述内容が正しいかのチェック。

・FW（フレームワーク） →システム開発を楽に行えるように用意された、プログラムとかのひな形。

・PHPのFW（フレームワーク）の種類と特徴 →laravel…多機能なMVCフレームワーク。
　　　　　　　　　　　　　　　　　　　　　CakePHP…PHP用の高速開発フレームワークです。アプリケーションの開発、メンテナンス、インストールのための拡張性の高いフレームワーク。
　　　　　　　　　　　　　　　　　　　　　FuelPHP…シンプルで、フレキシブルな、コミュニティにより開発されている PHP 5 用の Web フレームワーク。
　　　　　　　　　　　　　　　　　　　　　Symfony…大規模Webアプリケーション開発において、効率的な開発/保守を行うことができるフレームワーク。


・Ajax →JavaScriptを使って非同期通信。郵便番号を入力したら自動的に、住所が入力されるなど。

・API →その機能と関係ないプログラムとかから、その機能を利用できるように用意された、その機能との窓口部分。

・LAMP →データベースを利用したWebアプリケーションを開発・運用するのに適した、人気の高いオープンソースソフトウェアの組み合わせの一つ。
　　　　 Linux+Apache+MySQL+PHP/Perl/Python 　　　　 

・クラウドサーバー、レンタルサーバー、VPSの違い →クラウドサーバー…物理的には1つのサーバーなのでCPUやメモリは共有するが、
                                                                    仮想サーバーごとにきちんと割り当てて管理するため、複数の利用者で性能まで共有することはない。
　　　　　　　　　　　　　　　　　　　　　　　　　レンタルサーバー…１つの物理サーバーを複数ユーザーで共用。
　　　　　　　　　　　　　　　　　　　　　　　　　VPS             …一台のコンピューターにサーバーを複数稼働させ、それぞれのサーバーをユーザーが利用できるサービスです。
　　　　　　　　　　　　　　　　　　　　　　　　　　　              レンタルサーバーとの大きな違いは、「サーバーの管理権限」が付与されること
　　　　　　　　　　　　　　　　　　　　　　　　　

・AWS →アマゾンウェブサービスの略称。Amazonが提供しているサービス。サーバーや、データベースそのほかにもある。

・プラットフォーム →動かすための土台となる環境のこと。

・カバレッジ →全体に対して、これくらいをカバーしているよ。という意味。

・エビデンス →何かの証拠となるもののこと。

・コンパイル →人が書いたプログラムを、コンピュータがわかる言葉に翻訳すること。

・バッチ処理 →ある決められたタイミングで定期的にまとめてデータを処理すること。

・デプロイ(意味と方法、FTPソフトの種類) →ネットワークを通じて提供されるWebアプリケーションなどのシステム開発工程において、システムを利用可能な状態にすること。
　　　　　　　　　　　　　　　　　　　　　ブルーグリーンデプロイメント、イミュータブルデプロイメント、シンボリックデプロイメント、ローリングデプロイメント。
　　　　　　　　　　　　　　　　　　　　
　　　　　　　　　　　　　　　　　　　　　FTPの種類…FFFTP、WinSCP、Filezilla等。


・データベース接続クライアント(説明、代表的なもの) →データベース管理システム や関係データベース管理システム 上のデータを容易に扱うためのソフトウェア。
　　　　　　　　　　　　　　　　　　　　　　　　　　 代表的な物は、phpmyadmin
　　　　　　　　　　　　　　　　　　　　　　　　　　 

・Gitホスティングサービス(説明、代表的なもの) →バージョン管理システム。
　　　　　　　　　　　　　　　　　　　　　　　　代表的なものは、GitHub。

・チケット管理ツール(説明、代表的なもの) →案件に必要な情報をまとめておける。
　　　　　　　　　　　　　　　　　　　　　 代表的な物は、Redmine 

・DBのJOINとは →結合すること。

・SEO →検索エンジンからサイトに訪れる人を増やすことで、Webサイトの成果を向上させる施策
。











　　　　　　　　　　 


